name: E2E Testing

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  e2e-test:
    strategy:
      matrix:
        platform: [android, ios]
        include:
          - platform: ios
            os: macos-latest
          - platform: android
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Setup Java
        if: matrix.platform == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3

      - name: Setup Android Emulator
        if: matrix.platform == 'android'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: |
            adb devices
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
            echo "Emulator ready"

      - name: Install iOS dependencies
        if: matrix.platform == 'ios'
        run: |
          brew install watchman
          brew tap facebook/fb
          brew install idb-companion

      - name: Setup iOS Simulator
        if: matrix.platform == 'ios'
        run: |
          xcrun simctl list
          UDID=$(xcrun simctl create "iPhone 15" com.apple.CoreSimulator.SimDeviceType.iPhone-15 com.apple.CoreSimulator.SimRuntime.iOS-17-4)
          xcrun simctl boot "$UDID"
          xcrun simctl list devices | grep "iPhone 15"

      - name: Prebuild & Run App
        working-directory: ./client
        run: |
          npx expo prebuild --clean
          if [ "${{ matrix.platform }}" = "ios" ]; then
            cd ios && pod install && cd ..
            npm run ios
          else
            export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
            npm run android
          fi

      - name: Run Maestro Tests
        working-directory: .
        run: |
          sleep 15
          if [ "${{ matrix.platform }}" = "ios" ]; then
            idb_companion --udid $UDID &
            sleep 5
          fi
          if [ ! -f "maestro/flows/app.yml" ]; then
            echo "Test file not found"
            exit 1
          fi
          maestro test maestro/flows/app.yml

      - name: Upload Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.platform }}
          path: ~/.maestro/logs/
